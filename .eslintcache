[{"/home/robertburrows/level3project/src/index.js":"1","/home/robertburrows/level3project/src/App.js":"2","/home/robertburrows/level3project/src/components/Footer.js":"3","/home/robertburrows/level3project/src/components/Navbar.js":"4","/home/robertburrows/level3project/src/pages/Records.js":"5","/home/robertburrows/level3project/src/pages/Attendance.js":"6","/home/robertburrows/level3project/src/pages/Dashboard.js":"7","/home/robertburrows/level3project/src/mySampleArray.js":"8","/home/robertburrows/level3project/src/components/SimpleList.js":"9","/home/robertburrows/level3project/src/components/ClassButtons2.js":"10","/home/robertburrows/level3project/src/components/AttendanceModal.js":"11","/home/robertburrows/level3project/src/components/ToggleButtons.js":"12","/home/robertburrows/level3project/src/components/StudentsSection.js":"13","/home/robertburrows/level3project/src/components/ClassesSection.js":"14"},{"size":194,"mtime":1609268788710,"results":"15","hashOfConfig":"16"},{"size":267,"mtime":1607916588609,"results":"17","hashOfConfig":"16"},{"size":408,"mtime":1608240172425,"results":"18","hashOfConfig":"16"},{"size":3061,"mtime":1609813286347,"results":"19","hashOfConfig":"16"},{"size":8321,"mtime":1609992449308,"results":"20","hashOfConfig":"16"},{"size":11056,"mtime":1609992505253,"results":"21","hashOfConfig":"16"},{"size":15464,"mtime":1609992449313,"results":"22","hashOfConfig":"16"},{"size":855,"mtime":1607916588614,"results":"23","hashOfConfig":"16"},{"size":4416,"mtime":1609992449315,"results":"24","hashOfConfig":"16"},{"size":498,"mtime":1609982828019,"results":"25","hashOfConfig":"16"},{"size":568,"mtime":1609380058160,"results":"26","hashOfConfig":"16"},{"size":585,"mtime":1608850407971,"results":"27","hashOfConfig":"16"},{"size":969,"mtime":1609983413634,"results":"28","hashOfConfig":"16"},{"size":1169,"mtime":1609983996279,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"k0r2as",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/robertburrows/level3project/src/index.js",[],["60","61"],"/home/robertburrows/level3project/src/App.js",[],"/home/robertburrows/level3project/src/components/Footer.js",[],"/home/robertburrows/level3project/src/components/Navbar.js",[],"/home/robertburrows/level3project/src/pages/Records.js",["62"],"import React from \"react\";\nimport mySampleArray from \"../mySampleArray.js\";\nimport SimpleList from \"../components/SimpleList\";\nimport \"./records.css\";\n\nlet recordsArray;\nlet localExists = localStorage.getItem(\"localAttendance\");\nif (localExists){\n  recordsArray = JSON.parse(localExists)\n}else{\n  recordsArray = [];\n}\n// let recordsArray = [{date: \"Tue Dec 08 2020\"}, {date: \"Wed Dec 09 2020\"}];\n// recordsArray.map((day) => {\n//   day.attendance = mySampleArray;\n//   return day;\n// });\n// console.log(recordsArray);\n\nclass Records extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      myArray: recordsArray,\n      classSelection: undefined,\n      dateSelection: undefined,\n      edit: false,\n    };\n    this.baseState = this.state;\n    this.cancelSave = this.cancelSave.bind(this);\n    this.saveArray = this.saveArray.bind(this);\n    this.handleEdit = this.handleEdit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDateSelection = this.handleDateSelection.bind(this);\n    this.handleClassSelection = this.handleClassSelection.bind(this);\n  }\n\n  cancelSave(){\n    this.setState({\n      edit: false,\n      classSelection: undefined,\n      \n    });\n    document.getElementById(\"selClass\").value = \"DEFAULT\";\n  }\n\n  saveArray() {\n    this.setState({\n      edit: false,\n    });\n    recordsArray = this.state.myArray;\n  }\n  handleEdit(boxName, studentIndex) {\n    if (this.state.edit === true) {\n      this.handleChange(boxName, studentIndex);\n    } if (this.state.edit === false) {\n      if (window.confirm(\"Are you sure you want to edit this record\")) {\n        this.setState({\n          edit: true,\n        });\n        this.handleChange(boxName, studentIndex);\n      }\n    }\n  }\n  handleChange(boxName, studentIndex, text) {\n    this.setState((prevState) => {\n\n      const updatedArray = prevState.myArray.map((day, index) => {\n        // debugger\n        if (index !== prevState.dateSelection) {\n          return day;\n        } else {\n          day.attendance.map((subject, index) => {\n            if (index !== prevState.classSelection) {\n              return subject;\n            } else {\n              subject.students.map((student, index) => {\n                if (index === studentIndex) {\n                  switch (boxName) {\n                    case \"present\":\n                      student.present = !student.present;\n                      break;\n                    case \"late\":\n                      student.late = !student.late;\n                      break;\n                    case \"camera\":\n                      student.camera = !student.camera;\n                      break;\n                    case \"comments\":\n                      student.comments = text;\n                      break;\n                    default:\n                  }\n                }\n                return student;\n              });\n              return subject;\n            }\n          });\n          return day;\n        }\n      });\n\n      return {\n        myArray: updatedArray,\n      };\n    });\n  }\n\n  handleDateSelection(date) {\n    this.setState({\n      dateSelection: date - 1,\n      edit: false,\n    });\n  }\n  handleClassSelection(subject) {\n    this.setState({\n      classSelection: subject - 1,\n      edit: false,\n    });\n  }\n  render() {\n    const dayList = recordsArray.map((day, index) => (\n      <option key={\"ds\" + index} id={\"ds\" + index} value={index}>\n        {day.date}\n      </option>\n    ));\n    let classList;\n    if (this.state.dateSelection === undefined) {\n      classList = <h5>Please select a date</h5>;\n    } else {\n      classList = this.state.myArray[this.state.dateSelection].attendance.map(\n        (day, index) => (\n          <option key={\"cs\" + index} id={\"cs\" + index} value={index}>\n            {day.subject}\n          </option>\n        )\n      );\n    }\n\n    let displayStudents;\n    let displayStudentsMessage;\n    let displayList;\n    if (this.state.dateSelection === undefined) {\n      displayStudentsMessage = <span></span>;\n      displayStudents = <span></span>;\n      displayList = { display: \"none\" };\n    } else if (this.state.classSelection === undefined) {\n      displayList = { display: \"none\" };\n      displayStudentsMessage = (\n        <h5 className=\"text-center\">Select a class to see attendance</h5>\n      );\n    } else {\n      if (\n        this.state.myArray[this.state.dateSelection].attendance[\n          this.state.classSelection\n        ].students === undefined\n      ) {\n        displayList = { display: \"none\" };\n        displayStudentsMessage = (\n          <h5 className=\"text-center\">\n            There are no students listed for this class\n          </h5>\n        );\n      } else {\n        displayList = { display: \"block\" };\n        displayStudents = this.state.myArray[\n          this.state.dateSelection\n        ].attendance[\n          this.state.classSelection\n        ].students.map((student, index) => (\n          <SimpleList\n            key={index}\n            studentIndex={index}\n            student={student}\n            handleChange={this.handleEdit}\n          />\n        ));\n      }\n    }\n    let displayClass;\n    if (this.state.myArray.length===0){\n      displayClass = <h5 className=\"text-center\">You have no attendance records</h5>;\n    }\n    else if (this.state.dateSelection === undefined) {\n      displayClass = <h5 className=\"text-center\">Please select a date</h5>;\n    } else {\n      displayClass = (\n        <div>\n          <form>\n            <div className=\"form-group\" align=\"center\">\n              <select\n                defaultValue={\"DEFAULT\"}\n                className=\"form-control\"\n                id=\"selClass\"\n                style={{ width: 300 }}\n                onChange={() =>\n                  this.handleClassSelection(\n                    document.getElementById(\"selClass\").selectedIndex\n                  )\n                }\n              >\n                <option value=\"DEFAULT\" disabled hidden>\n                  Choose Class\n                </option>\n                {classList}\n              </select>\n            </div>\n          </form>\n          <div>{displayStudentsMessage}</div>\n          <div className=\"row d-flex justify-content-center \">\n            <div style={displayList} className=\"attendanceRecord\">\n              <ol style={{ marginRight: \"10px\" }}>{displayStudents}</ol>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    let editButtons;\n    if (\n      this.state.dateSelection === undefined ||\n      this.state.classSelection === undefined ||\n      this.state.myArray[this.state.dateSelection].attendance[\n        this.state.classSelection\n      ].students === undefined\n    ) {\n      editButtons = <span></span>;\n    } else {\n      editButtons = (\n        <div className=\"row\">\n          <div className=\"col d-flex justify-content-center\">\n            <button\n              className=\"mx-2 my-2 mybutton\"\n              onClick={() => this.saveArray()}\n            >\n              Save Changes\n            </button>\n            <button\n              className=\"mx-2 my-2 mybuttonCancel\"\n              onClick={() => this.cancelSave()}\n            >\n              Cancel\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"container-fluid\">\n        <h1 style={{ color: \"#2C514C\", fontWeight:'bold' }} className=\"text-center mt-3\">\n          Records\n        </h1>\n        <div className=\"row d-flex justify-content-center\">\n          <div className=\"col my-2\">\n            <form>\n              <div className=\"form-group\" align=\"center\">\n                <select\n                  defaultValue={\"DEFAULT\"}\n                  className=\"form-control\"\n                  id=\"selDate\"\n                  style={{ width: 300 }}\n                  onChange={() =>\n                    this.handleDateSelection(\n                      document.getElementById(\"selDate\").selectedIndex\n                    )\n                  }\n                >\n                  <option value=\"DEFAULT\" disabled hidden>\n                    Choose Date\n                  </option>\n\n                  {dayList}\n                </select>\n              </div>\n            </form>\n            {displayClass}\n          </div>\n        </div>\n        {editButtons}\n      </div>\n    );\n  }\n}\n\nexport default Records;\n","/home/robertburrows/level3project/src/pages/Attendance.js",["63","64"],"/home/robertburrows/level3project/src/pages/Dashboard.js",[],"/home/robertburrows/level3project/src/mySampleArray.js",[],"/home/robertburrows/level3project/src/components/SimpleList.js",[],"/home/robertburrows/level3project/src/components/ClassButtons2.js",[],"/home/robertburrows/level3project/src/components/AttendanceModal.js",[],"/home/robertburrows/level3project/src/components/ToggleButtons.js",[],"/home/robertburrows/level3project/src/components/StudentsSection.js",[],"/home/robertburrows/level3project/src/components/ClassesSection.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":21},{"ruleId":"73","severity":1,"message":"74","line":137,"column":23,"nodeType":"75","messageId":"76","endLine":137,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":165,"column":23,"nodeType":"75","messageId":"76","endLine":165,"endColumn":25},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'mySampleArray' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]