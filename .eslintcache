[{"C:\\Users\\Robert Burrows\\level3project\\src\\index.js":"1","C:\\Users\\Robert Burrows\\level3project\\src\\App.js":"2","C:\\Users\\Robert Burrows\\level3project\\src\\components\\Navbar.js":"3","C:\\Users\\Robert Burrows\\level3project\\src\\components\\Footer.js":"4","C:\\Users\\Robert Burrows\\level3project\\src\\mySampleArray.js":"5","C:\\Users\\Robert Burrows\\level3project\\src\\components\\SimpleList.js":"6","C:\\Users\\Robert Burrows\\level3project\\src\\pages\\attendance\\Attendance.js":"7","C:\\Users\\Robert Burrows\\level3project\\src\\pages\\Attendance\\Attendance.js":"8","C:\\Users\\Robert Burrows\\level3project\\src\\pages\\Attendance\\AttendanceModal.js":"9","C:\\Users\\Robert Burrows\\level3project\\src\\pages\\Dashboard\\Dashboard.js":"10","C:\\Users\\Robert Burrows\\level3project\\src\\pages\\Records\\Records.js":"11","C:\\Users\\Robert Burrows\\level3project\\src\\pages\\Dashboard\\ClassesSection.js":"12","C:\\Users\\Robert Burrows\\level3project\\src\\pages\\Attendance\\ToggleButtons.js":"13","C:\\Users\\Robert Burrows\\level3project\\src\\pages\\Dashboard\\StudentsSection.js":"14","C:\\Users\\Robert Burrows\\level3project\\src\\pages\\Attendance\\ClassButtons.js":"15"},{"size":201,"mtime":1609945119676,"results":"16","hashOfConfig":"17"},{"size":281,"mtime":1607630601556,"results":"18","hashOfConfig":"17"},{"size":3187,"mtime":1610036561808,"results":"19","hashOfConfig":"17"},{"size":424,"mtime":1608239218603,"results":"20","hashOfConfig":"17"},{"size":877,"mtime":1607630601567,"results":"21","hashOfConfig":"17"},{"size":4550,"mtime":1610036998216,"results":"22","hashOfConfig":"17"},{"size":10650,"mtime":1610037104964,"results":"23","hashOfConfig":"17"},{"size":10650,"mtime":1610037104964,"results":"24","hashOfConfig":"17"},{"size":643,"mtime":1610036268000,"results":"25","hashOfConfig":"17"},{"size":14832,"mtime":1610036788628,"results":"26","hashOfConfig":"17"},{"size":8854,"mtime":1610036788643,"results":"27","hashOfConfig":"17"},{"size":1202,"mtime":1610036724050,"results":"28","hashOfConfig":"17"},{"size":608,"mtime":1610036668032,"results":"29","hashOfConfig":"17"},{"size":1004,"mtime":1610036733897,"results":"30","hashOfConfig":"17"},{"size":523,"mtime":1610037134267,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l5v290",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Robert Burrows\\level3project\\src\\index.js",[],"C:\\Users\\Robert Burrows\\level3project\\src\\App.js",[],"C:\\Users\\Robert Burrows\\level3project\\src\\components\\Navbar.js",[],"C:\\Users\\Robert Burrows\\level3project\\src\\components\\Footer.js",[],"C:\\Users\\Robert Burrows\\level3project\\src\\mySampleArray.js",[],"C:\\Users\\Robert Burrows\\level3project\\src\\components\\SimpleList.js",[],"C:\\Users\\Robert Burrows\\level3project\\src\\pages\\attendance\\Attendance.js",["64","65"],"C:\\Users\\Robert Burrows\\level3project\\src\\pages\\Attendance\\Attendance.js",["66","67"],"C:\\Users\\Robert Burrows\\level3project\\src\\pages\\Attendance\\AttendanceModal.js",[],"C:\\Users\\Robert Burrows\\level3project\\src\\pages\\Dashboard\\Dashboard.js",[],["68","69"],"C:\\Users\\Robert Burrows\\level3project\\src\\pages\\Records\\Records.js",["70"],"import React from \"react\";\r\nimport SimpleList from \"../../components/SimpleList\";\r\nimport \"./records.css\";\r\n\r\nlet recordsArray;\r\nlet localExists = localStorage.getItem(\"localAttendance\");\r\nif (localExists){\r\n  recordsArray = JSON.parse(localExists);\r\n}else{\r\n  recordsArray = [];\r\n}\r\n// let recordsArray = [{date: \"Tue Dec 08 2020\"}, {date: \"Wed Dec 09 2020\"}];\r\n// recordsArray.map((day) => {\r\n//   day.attendance = mySampleArray;\r\n//   return day;\r\n// });\r\n// console.log(recordsArray);\r\n\r\nclass Records extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      myArray: recordsArray,\r\n      classSelection: undefined,\r\n      dateSelection: undefined,\r\n      edit: false,\r\n    };\r\n    this.baseState = this.state;\r\n    this.cancelSave = this.cancelSave.bind(this);\r\n    this.saveArray = this.saveArray.bind(this);\r\n    this.handleEdit = this.handleEdit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleDateSelection = this.handleDateSelection.bind(this);\r\n    this.handleClassSelection = this.handleClassSelection.bind(this);\r\n  }\r\n\r\n  cancelSave(){\r\n    this.setState({\r\n      edit: false,\r\n      classSelection: undefined,\r\n      \r\n    });\r\n    document.getElementById(\"selClass\").value = \"DEFAULT\";\r\n  }\r\n\r\n  saveArray() {\r\n    this.setState({\r\n      edit: false,\r\n    });\r\n    let updateLocal = JSON.stringify(this.state.myArray);\r\n    localStorage.setItem(\"localAttendance\", updateLocal);\r\n    window.location.reload();\r\n  }\r\n  handleEdit(boxName, studentIndex, text) {\r\n    if (this.state.edit === true) {\r\n      this.handleChange(boxName, studentIndex, text);\r\n    } if (this.state.edit === false) {\r\n      if (window.confirm(\"Are you sure you want to edit this record\")) {\r\n        this.setState({\r\n          edit: true,\r\n        });\r\n        this.handleChange(boxName, studentIndex, text);\r\n      }\r\n    }\r\n  }\r\n  handleChange(boxName, studentIndex, text) {\r\n    this.setState((prevState) => {\r\n      const updatedArray = prevState.myArray.map((day, index) => {\r\n        if (index !== prevState.dateSelection) {\r\n          return day;\r\n        } else {\r\n          day.attendance.map((subject, index) => {\r\n            if (index !== prevState.classSelection) {\r\n              return subject;\r\n            } else {\r\n              subject.students.map((student, index) => {\r\n                if (index === studentIndex) {\r\n                  switch (boxName) {\r\n                    case \"present\":\r\n                      student.present = !student.present;\r\n                      break;\r\n                    case \"late\":\r\n                      student.late = !student.late;\r\n                      if(student.late === true){\r\n                        student.present = true\r\n                      }\r\n                      break;\r\n                    case \"camera\":\r\n                      student.camera = !student.camera;\r\n                      break;\r\n                    case \"comments\":\r\n                      student.comments = text;\r\n                      break;\r\n                    default:\r\n                  }\r\n                }\r\n                return student;\r\n              });\r\n              return subject;\r\n            }\r\n          });\r\n          return day;\r\n        }\r\n      });\r\n\r\n      return {\r\n        myArray: updatedArray,\r\n      };\r\n    });\r\n    console.log(this.state.myArray)\r\n  }\r\n\r\n  handleDateSelection(date) {\r\n    this.setState({\r\n      dateSelection: date - 1,\r\n      edit: false,\r\n    });\r\n  }\r\n  handleClassSelection(subject) {\r\n    this.setState({\r\n      classSelection: subject - 1,\r\n      edit: false,\r\n    });\r\n  }\r\n  render() {\r\n    const dayList = recordsArray.map((day, index) => (\r\n      <option key={\"ds\" + index} id={\"ds\" + index} value={index}>\r\n        {day.date}\r\n      </option>\r\n    ));\r\n    let classList;\r\n    if (this.state.dateSelection === undefined) {\r\n      classList = <h5>Please select a date</h5>;\r\n    } else {\r\n      classList = this.state.myArray[this.state.dateSelection].attendance.map(\r\n        (day, index) => (\r\n          <option key={\"cs\" + index} id={\"cs\" + index} value={index}>\r\n            {day.subject}\r\n          </option>\r\n        )\r\n      );\r\n    }\r\n\r\n    let displayStudents;\r\n    let displayStudentsMessage;\r\n    let displayList;\r\n    if (this.state.dateSelection === undefined) {\r\n      displayStudentsMessage = <span></span>;\r\n      displayStudents = <span></span>;\r\n      displayList = { display: \"none\" };\r\n    } else if (this.state.classSelection === undefined) {\r\n      displayList = { display: \"none\" };\r\n      displayStudentsMessage = (\r\n        <h5 className=\"text-center\">Select a class to see attendance</h5>\r\n      );\r\n    } else {\r\n      if (\r\n        this.state.myArray[this.state.dateSelection].attendance[\r\n          this.state.classSelection\r\n        ].students === undefined\r\n      ) {\r\n        displayList = { display: \"none\" };\r\n        displayStudentsMessage = (\r\n          <h5 className=\"text-center\">\r\n            There are no students listed for this class\r\n          </h5>\r\n        );\r\n      } else {\r\n        displayList = { display: \"block\" };\r\n        displayStudents = this.state.myArray[\r\n          this.state.dateSelection\r\n        ].attendance[\r\n          this.state.classSelection\r\n        ].students.map((student, index) => (\r\n          <SimpleList\r\n            key={index}\r\n            studentIndex={index}\r\n            student={student}\r\n            handleChange={this.handleEdit}\r\n          />\r\n        ));\r\n      }\r\n    }\r\n    let displayClass;\r\n    if (this.state.myArray.length===0){\r\n      displayClass = <h5 className=\"text-center\">You have no attendance records</h5>;\r\n    }\r\n    else if (this.state.dateSelection === undefined) {\r\n      displayClass = <h5 className=\"text-center\">Please select a date</h5>;\r\n    } else {\r\n      displayClass = (\r\n        <div>\r\n          <form>\r\n            <div className=\"form-group\" align=\"center\">\r\n              <select\r\n                defaultValue={\"DEFAULT\"}\r\n                className=\"form-control\"\r\n                id=\"selClass\"\r\n                style={{ width: 300 }}\r\n                onChange={() =>\r\n                  this.handleClassSelection(\r\n                    document.getElementById(\"selClass\").selectedIndex\r\n                  )\r\n                }\r\n              >\r\n                <option value=\"DEFAULT\" disabled hidden>\r\n                  Choose Class\r\n                </option>\r\n                {classList}\r\n              </select>\r\n            </div>\r\n          </form>\r\n          <div>{displayStudentsMessage}</div>\r\n          <div className=\"row d-flex justify-content-center \">\r\n            <div style={displayList} className=\"attendanceRecord\">\r\n              <ol style={{ marginRight: \"10px\" }}>{displayStudents}</ol>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    let editButtons;\r\n    if (this.state.edit === false ||\r\n      this.state.dateSelection === undefined ||\r\n      this.state.classSelection === undefined ||\r\n      this.state.myArray[this.state.dateSelection].attendance[\r\n        this.state.classSelection\r\n      ].students === undefined\r\n    ) {\r\n      editButtons = <span></span>;\r\n    } else {\r\n      editButtons = (\r\n        <div className=\"row\">\r\n          <div className=\"col d-flex justify-content-center\">\r\n            <button\r\n              className=\"mx-2 my-2 mybutton\"\r\n              onClick={() => this.saveArray()}\r\n            >\r\n              Save Changes\r\n            </button>\r\n            <button\r\n              className=\"mx-2 my-2 mybuttonCancel\"\r\n              onClick={() => this.cancelSave()}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <h1 style={{ color: \"#2C514C\", fontWeight:'bold' }} className=\"text-center mt-3\">\r\n          Records\r\n        </h1>\r\n        <div className=\"row d-flex justify-content-center\">\r\n          <div className=\"col my-2\">\r\n            <form>\r\n              <div className=\"form-group\" align=\"center\">\r\n                <select\r\n                  defaultValue={\"DEFAULT\"}\r\n                  className=\"form-control\"\r\n                  id=\"selDate\"\r\n                  style={{ width: 300 }}\r\n                  onChange={() =>\r\n                    this.handleDateSelection(\r\n                      document.getElementById(\"selDate\").selectedIndex\r\n                    )\r\n                  }\r\n                >\r\n                  <option value=\"DEFAULT\" disabled hidden>\r\n                    Choose Date\r\n                  </option>\r\n\r\n                  {dayList}\r\n                </select>\r\n              </div>\r\n            </form>\r\n            {displayClass}\r\n          </div>\r\n        </div>\r\n        {editButtons}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Records;\r\n","C:\\Users\\Robert Burrows\\level3project\\src\\pages\\Dashboard\\ClassesSection.js",[],"C:\\Users\\Robert Burrows\\level3project\\src\\pages\\Attendance\\ToggleButtons.js",[],"C:\\Users\\Robert Burrows\\level3project\\src\\pages\\Dashboard\\StudentsSection.js",[],"C:\\Users\\Robert Burrows\\level3project\\src\\pages\\Attendance\\ClassButtons.js",[],{"ruleId":"71","severity":1,"message":"72","line":126,"column":23,"nodeType":"73","messageId":"74","endLine":126,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":154,"column":23,"nodeType":"73","messageId":"74","endLine":154,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":126,"column":23,"nodeType":"73","messageId":"74","endLine":126,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":154,"column":23,"nodeType":"73","messageId":"74","endLine":154,"endColumn":25},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":21},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'mySampleArray' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]