[{"/home/robertburrows/level3project/src/index.js":"1","/home/robertburrows/level3project/src/App.js":"2","/home/robertburrows/level3project/src/components/Navbar.js":"3","/home/robertburrows/level3project/src/components/Footer.js":"4","/home/robertburrows/level3project/src/pages/Classes.js":"5","/home/robertburrows/level3project/src/pages/Dashboard.js":"6","/home/robertburrows/level3project/src/pages/Records.js":"7","/home/robertburrows/level3project/src/mySampleArray.js":"8","/home/robertburrows/level3project/src/components/ClassButtons2.js":"9","/home/robertburrows/level3project/src/components/SimpleList.js":"10","/home/robertburrows/level3project/src/components/Toggle.js":"11","/home/robertburrows/level3project/src/components/ClassesSection.js":"12","/home/robertburrows/level3project/src/components/StudentsSection.js":"13","/home/robertburrows/level3project/src/components/AttendanceModal.js":"14","/home/robertburrows/level3project/src/components/ToggleButtons.js":"15"},{"size":194,"mtime":1609268788710,"results":"16","hashOfConfig":"17"},{"size":267,"mtime":1607916588609,"results":"18","hashOfConfig":"17"},{"size":3042,"mtime":1608580914933,"results":"19","hashOfConfig":"17"},{"size":408,"mtime":1608240172425,"results":"20","hashOfConfig":"17"},{"size":10531,"mtime":1608871654327,"results":"21","hashOfConfig":"17"},{"size":13257,"mtime":1609278370599,"results":"22","hashOfConfig":"17"},{"size":7294,"mtime":1608850389230,"results":"23","hashOfConfig":"17"},{"size":855,"mtime":1607916588614,"results":"24","hashOfConfig":"17"},{"size":469,"mtime":1608778066236,"results":"25","hashOfConfig":"17"},{"size":1372,"mtime":1608689087967,"results":"26","hashOfConfig":"17"},{"size":413,"mtime":1608850401772,"results":"27","hashOfConfig":"17"},{"size":1113,"mtime":1609279321138,"results":"28","hashOfConfig":"17"},{"size":1954,"mtime":1609215863564,"results":"29","hashOfConfig":"17"},{"size":562,"mtime":1608850426318,"results":"30","hashOfConfig":"17"},{"size":585,"mtime":1608850407971,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"k0r2as",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/robertburrows/level3project/src/index.js",[],["64","65"],"/home/robertburrows/level3project/src/App.js",[],"/home/robertburrows/level3project/src/components/Navbar.js",[],"/home/robertburrows/level3project/src/components/Footer.js",[],"/home/robertburrows/level3project/src/pages/Classes.js",["66","67"],"import React from \"react\";\n//import mySampleArray from \"../mySampleArray.js\";\nimport ClassButtons2 from \"../components/ClassButtons2\";\nimport ReactModal from \"react-modal\";\nimport SimpleList from \"../components/SimpleList\";\nimport AttendanceModal from \"../components/AttendanceModal\";\nimport ToggleButtons from \"../components/ToggleButtons\";\n\nlet attendanceRecord=[[\"Tue Dec 08 2020\"], [\"Wed Dec 09 2020\"]];\nattendanceRecord.map((day) => {\n  day.attendance = [];\n  return day;\n});\nconsole.log(attendanceRecord)\n\nlet myClassAttendance;\nif (JSON.parse(localStorage.getItem(\"localClassList\"))) {\n  myClassAttendance = JSON.parse(localStorage.getItem(\"localClassList\"));\n} else {\n  myClassAttendance = [];\n}\n\nclass Classes extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classAttendance: myClassAttendance,\n      showModal: false,\n      classSelection: undefined,\n      toggleP: false,\n      toggleC: false,\n      myAttendance: attendanceRecord\n    };\n    this.togglePresent = this.togglePresent.bind(this);\n    this.toggleCamera = this.toggleCamera.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.cancelSave = this.cancelSave.bind(this);\n    this.updateLocalStorage = this.updateLocalStorage.bind(this);\n  }\n\n  cancelSave(){\n    this.setState((prevState)=>{\n      prevState.classAttendance[this.state.classSelection].students.map((student)=>{\n        student.present = false;\n        student.late = false;\n        student.camera = false;\n        return student;\n      })\n    });\n    this.setState({ showModal: false, classSelection: undefined, toggleP: false, toggleC: false });\n  }\n\n  toggleCamera() {\n    this.setState((prevState) => {\n      const newToggle = !prevState.toggleC;\n      const updatedClassAttendance2 = prevState.classAttendance.map((item) => {\n        if (item.students === undefined) {\n          return item;\n        } else {\n          item.students.map((student) => {\n            if (student.camera === newToggle) {\n              return student;\n            } else {\n              student.camera = newToggle;\n              return student;\n            }\n          });\n          return item;\n        }\n      });\n      return {\n        ...prevState,\n        classAttendance: updatedClassAttendance2,\n        toggleC: newToggle,\n      };\n    });\n  }\n\n  togglePresent() {\n    this.setState((prevState) => {\n      const newToggle = !prevState.toggleP;\n      const updatedClassAttendance2 = prevState.classAttendance.map((item) => {\n        if (item.students === undefined) {\n          return item;\n        } else {\n          item.students.map((student) => {\n            if (student.present === newToggle) {\n              return student;\n            } else {\n              student.present = newToggle;\n              return student;\n            }\n          });\n          return item;\n        }\n      });\n      return {\n        ...prevState,\n        classAttendance: updatedClassAttendance2,\n        toggleP: newToggle,\n      };\n    });\n  }\n\n  handleOpenModal(item) {\n    const newDate = new Date().toDateString();\n    let addIndex;\n    const dateExists = attendanceRecord.find(function(record, index) {\n      if(record == newDate){\n        addIndex = index;\n        return true;\n      }else{\n        return false;\n      }\n        \n    });\n    if(dateExists){\n      const recordExists = attendanceRecord[addIndex].attendance.find( ({ subject }) => subject === this.state.classAttendance[item].subject )\n      if(recordExists !== undefined){\n        alert('You already have taken attendance for this class. Please go to your records in order to make changes')\n        document.getElementById('clickTitle').click();\n      }else{\n        this.setState({ showModal: true, classSelection: item });\n      }\n    }else{\n      this.setState({ showModal: true, classSelection: item });\n    }\n    \n  }\n\n  updateLocalStorage() {\n    const newDate = new Date().toDateString();\n    let addIndex;\n    const dateExists = attendanceRecord.find(function(record, index) {\n      if(record == newDate){\n        addIndex = index;\n        return true;\n      }else{\n        return false;\n      }\n        \n    });\n    if(dateExists){\n      if(attendanceRecord[addIndex].attendance){\n        attendanceRecord[addIndex].attendance.push(this.state.classAttendance[this.state.classSelection])\n      }else{\n        attendanceRecord[addIndex].attendance=[]\n        attendanceRecord[addIndex].attendance.push(this.state.classAttendance[this.state.classSelection])\n      }\n      this.setState({myAttendance: attendanceRecord})\n      console.log('added class')\n      console.log(attendanceRecord)\n      console.log(this.state.myAttendance)\n    }else{\n      attendanceRecord.push([newDate]);\n      attendanceRecord[attendanceRecord.length-1].attendance=[]\n      attendanceRecord[attendanceRecord.length-1].attendance.push(this.state.classAttendance[this.state.classSelection])\n      this.setState({myAttendance: attendanceRecord})\n      console.log('added date and class')\n      console.log(attendanceRecord)\n      console.log(this.state.myAttendance)\n    }\n    console.log(\"to local\");\n    let toLocalAttendance = JSON.stringify(this.state.myAttendance);\n    console.log(JSON.stringify(attendanceRecord));\n    console.log(JSON.parse(toLocalAttendance));\n    // let toLocalAttendance = JSON.stringify(attendanceRecord);\n    // localStorage.setItem(\"localAttendance\", toLocalAttendance);\n    // console.log('to local');\n    // console.log(JSON.parse(localStorage.getItem(\"localAttendance\")));\n    // const toLocalAttendance = JSON.stringify(this.state.myClasses);\n    // //const toLocalClassSelection = document.getElementById('selClass').value\n    // window.localStorage.setItem(\"localClassList\", toLocalClassList);\n    // //window.localStorage.setItem(\"SelItem\", toLocalClassSelection)\n    // console.log(\"hey\" + window.localStorage.getItem(\"localClassList\"));\n    // //console.log(\"updated LCS \"+ toLocalClassSelection)\n    // //document.getElementById(\"saveChanges\").disabled=true\n    // console.log(\"reloading\")\n    // window.location.reload();\n  }\n\n  handleCloseModal() {\n    this.setState({ showModal: false, classSelection: undefined });\n    this.updateLocalStorage();\n    // window.localStorage.setItem(\"SelItem\", '');\n    // window.location.reload();\n  }\n\n  handleChange(boxName, studentIndex) {\n    this.setState((prevState) => {\n      const updatedClassAttendance = prevState.classAttendance.map((item) => {\n        if (item.students === undefined) {\n          return item;\n        } else {\n          item.students.map((student, index) => {\n            if (index === studentIndex) {\n              switch (boxName) {\n                case \"present\":\n                  student.present = !student.present;\n                  break;\n                case \"late\":\n                  student.late = !student.late;\n                  break;\n                case \"camera\":\n                  student.camera = !student.camera;\n                  break;\n                default:\n              }\n            }\n            return student;\n          });\n          return item;\n        }\n      });\n\n      return {\n        myclassAttendance: updatedClassAttendance,\n      };\n    });\n  }\n\n  render() {\n    let saveAttendance;\n    console.log(\"classSelection \" + this.state.classSelection);\n    let ToggleButtonP;\n    if (this.state.toggleP === false) {\n      ToggleButtonP = \"All Present\";\n    } else {\n      ToggleButtonP = \"Clear All\";\n    }\n    let ToggleButtonC;\n    if (this.state.toggleC === false) {\n      ToggleButtonC = \"All On\";\n    } else {\n      ToggleButtonC = \"Clear All\";\n    }\n    let displayButtons;\n    if (this.state.classAttendance.length === 0) {\n      displayButtons = (\n        <h5>Please go to the Dashboard to setup your classes</h5>\n      );\n    } else {\n      displayButtons = this.state.classAttendance.map((subject, index) => (\n        <ClassButtons2\n          key={\"cb\" + index}\n          classIndex={index}\n          text={subject.subject}\n          handleOpenModal={() => this.handleOpenModal(index)}\n        />\n      ));\n    }\n    let toggleButtons;\n    let displayStudents;\n    if (this.state.classAttendance.length === 0) {\n      displayStudents = <span></span>;\n      toggleButtons = <span></span>;\n    } else if (this.state.classSelection === undefined) {\n      toggleButtons = <span></span>;\n      displayStudents = <span></span>;\n    } else if (\n      this.state.classAttendance[this.state.classSelection].students.length !==\n      0\n    ) {\n      console.log(\"you have students\");\n      toggleButtons = (\n        <ToggleButtons\n          togglePresent={this.togglePresent}\n          toggleCamera={this.toggleCamera}\n          ToggleButtonP={ToggleButtonP}\n          ToggleButtonC={ToggleButtonC}\n        />\n      );\n      displayStudents = this.state.classAttendance[\n        this.state.classSelection\n      ].students.map((student, index) => (\n        <SimpleList\n          key={index}\n          studentIndex={index}\n          student={student}\n          handleChange={this.handleChange}\n        />\n      ));\n      saveAttendance = (\n        <button\n                  className=\"mx-2 my-2 mybutton\"\n                  onClick={this.handleCloseModal}\n                >\n                  Save Attendance\n                </button>\n      )\n    } else {\n      console.log(\"you do not have students\");\n      toggleButtons = <span></span>;\n      displayStudents = (\n        <h5 className=\"my-2\" style={{textAlign: 'center', fontWeight: 'bold'}}>You currently have no students listed in this class</h5>\n      );\n      saveAttendance=<span></span>;\n    }\n\n    return (\n      <div className=\"container\">\n        <input id=\"box1\" type=\"checkbox\" />\n        <label htmlFor=\"box1\">Checkbox1</label>\n        <div>\n          <ReactModal isOpen={this.state.showModal} className=\"Modal\">\n            <AttendanceModal\n              togglePresent={this.togglePresent}\n              toggleCamera={this.toggleCamera}\n              handleCloseModal={this.handleCloseModal}\n              cancelSave={this.cancelSave}\n              displayStudents={displayStudents}\n              toggleButtons={toggleButtons}\n              saveAttendance={saveAttendance}\n            />\n\n          </ReactModal>\n        </div>\n        <h2 id='clickTitle'>Classes</h2>\n        \n        <div className=\"row justify-content-around\">{displayButtons}</div>\n      </div>\n    );\n  }\n}\n\nReactModal.setAppElement(\"body\");\nexport default Classes;\n","/home/robertburrows/level3project/src/pages/Dashboard.js",["68"],"/home/robertburrows/level3project/src/pages/Records.js",[],"/home/robertburrows/level3project/src/mySampleArray.js",[],"/home/robertburrows/level3project/src/components/ClassButtons2.js",[],"/home/robertburrows/level3project/src/components/SimpleList.js",[],"/home/robertburrows/level3project/src/components/Toggle.js",[],"/home/robertburrows/level3project/src/components/ClassesSection.js",[],"/home/robertburrows/level3project/src/components/StudentsSection.js",[],"/home/robertburrows/level3project/src/components/AttendanceModal.js",[],"/home/robertburrows/level3project/src/components/ToggleButtons.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":110,"column":17,"nodeType":"75","messageId":"76","endLine":110,"endColumn":19},{"ruleId":"73","severity":1,"message":"74","line":136,"column":17,"nodeType":"75","messageId":"76","endLine":136,"endColumn":19},{"ruleId":"77","severity":1,"message":"78","line":225,"column":9,"nodeType":"79","messageId":"80","endLine":225,"endColumn":24},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'editButtonStyle' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]